akka {
  loglevel = debug

  actor {
    provider = "cluster"

    debug {
      receive = off
      lifecycle = off
    }

    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = kryo
    }

    enable-additional-serialization-bindings = on
    allow-java-serialization = off
  }

  remote {
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
  }

  discovery {
    config.services = {
      sysiphos = {
        endpoints = [
          {
            host = ${clustering.endpoint1-ip}
            port = ${clustering.endpoint1-port}
          },
          {
            host = ${clustering.endpoint2-ip}
            port = ${clustering.endpoint2-port}
          }
        ]
      }
    }
  }

  management {
    http {
      hostname = ${clustering.http-host}
      port = ${clustering.http-port}
    }

    cluster.bootstrap {
      enabled = ${clustering.enabled}
      new-cluster-enabled = ${clustering.allow-master}

      contact-point-discovery {
        service-name = ${clustering.service.name}
        discovery-method = akka.discovery.config
        required-contact-point-nr = 1
      }
    }
  }

}

akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]

clustering {
  allow-master = "on"
  allow-master = ${?ALLOW_MASTER}
  required-contacts = 1
  required-contacts = ${?REQUIRED_CONTACTS}
  enabled = "false"
  enabled = ${?CLUSTER_ENABLED}

  cluster.name = "sysiphos-cluster"
  cluster.name = ${?CLUSTER_NAME}

  // remoting config
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 1600
  port = ${?CLUSTER_PORT}

  // cluster management config
  http-host = "127.0.0.1"
  http-host = ${?CLUSTER_HTTP_HOST}

  http-port = "8558"
  http-port = ${?CLUSTER_HTTP_PORT}

  endpoint1-ip = ${clustering.http-host}
  endpoint1-ip = ${?ENDPOINT1_IP}

  endpoint1-port = ${clustering.http-port}
  endpoint1-port = ${?ENDPOINT1_PORT}

  endpoint2-ip = ${clustering.http-host}
  endpoint2-ip = ${?ENDPOINT2_IP}

  endpoint2-port = ${clustering.http-port}
  endpoint2-port = ${?ENDPOINT2_PORT}

  service.name = "sysiphos"
  service.name = ${?SERVICE_NAME}
}